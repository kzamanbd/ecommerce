name: Run Python Script

on:
    push:
        branches: [master]

env:
    SKYPE_USERNAME: ${{ secrets.SKYPE_USERNAME }}
    SKYPE_PASSWORD: ${{ secrets.SKYPE_PASSWORD }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4 # Checkout repository code
            # setup node
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
            - name: Install dependencies
              run: |
                  npm install
            - name: Get Build Error Message
              uses: actions/github-script@v6 # Use github-script action
              with:
                  script: core.setOutput('build_error', github.actions.getWorkflowRunLogs())
              id: get_build_error

    notification:
        name: Notification On Build Failure or Success
        runs-on: ubuntu-latest
        needs: [build]
        if: ${{ always() && (needs.build.result == 'failure') }}

        steps:
            - uses: actions/checkout@v4 # Checkout repository code

            - name: Get Latest Commit Author
              id: commit_info
              run: |
                  echo "AUTHOR_NAME=$(git log -n 1 --pretty=format:'%an')" >> $GITHUB_ENV
                  echo "BRANCH_NAME=$(git branch --show-current)" >> $GITHUB_ENV

            - name: Read Release Notes
              id: read_release_notes
              run: |
                  if [ -f "release-notes.txt" ]; then
                    echo "RELEASE_NOTES=$(cat release-notes.txt)" >> $GITHUB_ENV
                  else
                    echo "RELEASE_NOTES=No release notes found" >> $GITHUB_ENV
                  fi

            - name: Set up Python environment
              uses: actions/setup-python@v5 # Set up Python version
              with:
                  python-version: '3.x' # Specify your desired Python version (e.g., 3.8)

            - name: Install dependencies
              run: |
                  pip install skpy

            - name: Debug - Check Environment Variables
              run: |
                  echo "AUTHOR_NAME=$AUTHOR_NAME"
                  echo "RELEASE_NOTES=$RELEASE_NOTES"
                  echo "BRANCH_NAME=$BRANCH_NAME"
                  echo "BUILD_FAILED=$BUILD_FAILED"
                  echo "DEPLOY_FAILED=$DEPLOY_FAILED"
              env:
                  AUTHOR_NAME: ${{ env.AUTHOR_NAME }}
                  RELEASE_NOTES: ${{ env.RELEASE_NOTES }}
                  BRANCH_NAME: ${{ env.BRANCH_NAME }}
                  BUILD_FAILED: ${{ env.BUILD_FAILED }}
                  DEPLOY_FAILED: ${{ env.DEPLOY_FAILED }}
                  BUILD_ERROR: ${{ steps.get_build_error.outputs.build_error }}

            - name: Run Python script
              env:
                  AUTHOR_NAME: ${{ env.AUTHOR_NAME }} # Pass the environment variable to the script
                  RELEASE_NOTES: ${{ env.RELEASE_NOTES }}
                  BRANCH_NAME: ${{ env.BRANCH_NAME }}
              run: |
                  python notification.py
